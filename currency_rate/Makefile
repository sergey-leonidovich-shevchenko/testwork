USER_ID=$(shell id -u)

DC = @USER_ID=$(USER_ID) docker compose
DC_RUN = ${DC} run --rm php
DC_EXEC = ${DC} exec php

PHONY: help
.DEFAULT_GOAL := help

help: ## ‚ùî  This help.
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}' $(MAKEFILE_LIST)

setup: down init build install up migrate run-tests success-message console ## ‚öôÔ∏è Setup application.

init:  ## üî¢ Initialize environment and other .dist files.
	@if [ ! -f .env ]; then (echo "–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .env –∏–∑ .env.dist" && cp .env.dist .env); else (echo "–§–∞–π–ª .env —É–∂–µ —Å–æ–∑–¥–∞–Ω"); fi
	@if [ ! -f .env.test ]; then (echo "–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .env.test –∏–∑ .env.test.dist" && cp .env.test.dist .env.test); else (echo "–§–∞–π–ª .env.test —É–∂–µ —Å–æ–∑–¥–∞–Ω"); fi
	@if [ ! -f docker-compose.yml ]; then (echo "–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª docker-compose.yml –∏–∑ docker-compose.yml.dist" && cp docker-compose.yml.dist docker-compose.yml); else (echo "–§–∞–π–ª docker-compose.yml —É–∂–µ —Å–æ–∑–¥–∞–Ω"); fi
	@if [ ! -f .phpunit.xml ]; then (echo "–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .phpunit.xml –∏–∑ .phpunit.xml.dist" && cp .phpunit.xml.dist .phpunit.xml); else (echo "–§–∞–π–ª .phpunit.xml —É–∂–µ —Å–æ–∑–¥–∞–Ω"); fi
	@if [ ! -f .php-cs-fixer.php ]; then (echo "–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .php-cs-fixer.php –∏–∑ .php-cs-fixer.php.dist" && cp .php-cs-fixer.php.dist .php-cs-fixer.php); else (echo "–§–∞–π–ª .php-cs-fixer.php —É–∂–µ —Å–æ–∑–¥–∞–Ω"); fi

build: ## üîß Build services.
	${DC} build $(c)

up: ## ‚¨ÜÔ∏è Create and start services.
	${DC} up -d $(c)

stop: ## ‚õî  Stop services.
	${DC} stop $(c)

start: ## ‚ñ∂  Start services.
	${DC} start $(c)

down: ## ‚¨áÔ∏è Stop and remove containers and volumes.
	${DC} down -v $(c)

restart: stop start ## üîÉ Restart services.

console: ## üë§ Login in console.
	${DC_EXEC} /bin/bash

install: ## üåü Install dependencies without running the whole application.
	${DC_RUN} composer install

migrate: ## üìù Run migration.
	@echo "üìù Run migration..."
	sleep 3
	${DC_RUN} bin/console doctrine:migration:migrate -n

run-tests: ## üìü Run tests.
	@echo "üìü Run tests..."
	${DC_RUN} php vendor/bin/phpunit -c .phpunit.xml

success-message:
	@echo "üöÄ Project installed successfully!"
	@echo "You can now access the application at http://localhost:8337"

cs-fix:
	${DC_RUN}
